// src/backend/viatorAPI.jsw
// VERSIÓN CORREGIDA: Apunta a los endpoints de API correctos.

import { fetch } from 'wix-fetch';
import { getSecret } from 'wix-secrets-backend';

// Usamos una variable para cachear los secretos durante la ejecución de una sola sesión
let viatorApiKey;
let viatorEnv;

async function viatorFetch(path, options = {}) {
    // Cargar secretos solo si no están ya en la memoria de esta sesión
    if (!viatorApiKey) {
        viatorApiKey = await getSecret('viatorApiKey');
    }
    if (!viatorEnv) {
        viatorEnv = await getSecret('viatorEnv');
    }

    const baseUrl = viatorEnv === 'sandbox' ?
        'https://api.sandbox.viator.com/partner' :
        'https://api.viator.com/partner';

    const { headers = {}, ...rest } = options;
    const finalHeaders = {
        'exp-api-key': viatorApiKey, // <--- CORREGIDO: Usa el header 'exp-api-key'
        'Accept-Language': 'es-PR',
        'Accept': 'application/json;version=2.0',
        'Content-Type': 'application/json',
        ...headers
    };

    const url = `${baseUrl}${path}`;
    console.log(`[viatorAPI] Fetching URL: ${url}`); // <-- Log para depuración

    try {
        const response = await fetch(url, {
            headers: finalHeaders,
            ...rest
        });

        if (!response.ok) {
            const errorBody = await response.text();
            console.error(`[viatorAPI] Error ${response.status} en ${url}. Body: ${errorBody}`);
            throw new Error(`Viator API error ${response.status}`);
        }

        return response.json();
    } catch (error) {
        console.error(`[viatorAPI] Fallo en la llamada a fetch para ${url}:`, error);
        throw error;
    }
}

// --- FUNCIONES DE SINCRONIZACIÓN ---

export async function getModifiedProducts(sinceIso) {
    // CORREGIDO: Endpoint correcto y parámetro de fecha correcto
    return viatorFetch(`/products/modified-since?modifiedSince=${encodeURIComponent(sinceIso)}`);
}

export async function getBookingsStatus(sinceIso) {
    // CORREGIDO: Endpoint correcto y parámetro de fecha correcto
    const query = sinceIso ? `?lastUpdated=${encodeURIComponent(sinceIso)}` : '';
    return viatorFetch(`/bookings/status${query}`);
}

export async function getExchangeRates() {
    // CORREGIDO: Endpoint correcto
    return viatorFetch('/exchange-rates');
}

export async function getBulkLocations() {
    // CORREGIDO: Endpoint correcto
    return viatorFetch('/locations/bulk');
}


// --- FUNCIONES DE INTERACCIÓN EN TIEMPO REAL ---

export async function createBooking(bookingRequest) {
    // CORREGIDO: Endpoint correcto
    return viatorFetch('/bookings/create', {
        method: 'POST',
        body: JSON.stringify(bookingRequest)
    });
}

// Esta función parece ser para obtener detalles de productos específicos, la mantenemos.
export async function getViatorProductDetails(productCodesArray) {
    // CORREGIDO: Endpoint correcto para la v2
    return viatorFetch('/v2/products/bulk', {
        method: 'POST',
        body: JSON.stringify({ productCodes: productCodesArray })
    });
}

